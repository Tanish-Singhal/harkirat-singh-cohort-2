Monorepo
A single repo that holds all the frontend, backend and devops code.

You can just simply store all the services in various top level folder (like frontend, backend, etc.)
- if the top level folder don't share anything

Turborepo (it is not a monorepo framework, under the hood it uses Lerna, npm, etc. which are the monorepo framework)


- Build System Orchestrator
It doesn't directly perform tasks like transpilation, bundling, minification, or running tests. Instead, TurboRepo allows you to define tasks in your monorepo that call other tools to preform these actions.


ADVANTAGES
=> Caching - TurboRepo caches the outputs of tasks, so if you run a task and then run it again without changing any of the inputs, TurboRepo can skip the actual execution and provide the output from the cache.

=> Parallelization - It can run independent tasks in parallel, making efficient use of your machine's resources. This reduces the overall time needed to complete all tasks in your project.

=> Dependecy Graph Awareness - TurboRepo understands the dependency graph of your monorepo. This means it knows which packages depend on each other and can ensure tasks are run in the correct order. (run common folder first, then frontend and backend folder)


INSTALLATION
npx create-turbo@latest

Folders
Things that a end user hit
1. apps/web - A Next.js website
2. apps/docs - A Docs website that has all the documentation related to your project

These are the helper package (common folder)
1. packages/ui - UI packages 
2. packages/typescript-config - Shareable TS configuration
3. packages/eslint-config - Shareable ESLine configuration
